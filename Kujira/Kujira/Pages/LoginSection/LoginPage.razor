@page "/loginPage"
@using Kujira.Gui.Services
@using MudBlazor
@using System.ComponentModel.DataAnnotations
@using Kujira.Gui.Api
@using Kujira.Gui.Api.Requests
@using Microsoft.AspNetCore.Components.Authorization

@inject IJSRuntime JSRuntime
@inject ISnackbar Snackbar
@inject IKujiraBackendApi KujiraBackendApi
@inject NavigationManager NavigationManager
@inject AuthenticationService AuthService
@inject AuthenticationStateProvider AuthenticationStateProvider

<MudGrid Justify="Justify.Center">
    <MudItem xs="12" sm="6" md="4">
        <MudPaper Class="pa-4">
            <MudText Typo="Typo.h6" Class="mb-2">Login</MudText>

            <MudForm @ref="form">
                <MudTextField Label="E-Mail-Adresse" @bind-Value="@loginRequest.Email" Required="true" Validation="@(new EmailAddressAttribute() {ErrorMessage = "Die E-Mail Adresse ist nicht gültig"})" RequiredError="E-Mail-Adresse ist erforderlich!" />
                <MudTextField Label="Passwort" @bind-Value="@loginRequest.Password" InputType="InputType.Password" Required="true" RequiredError="Passwort ist erforderlich!" />

                <MudCardActions>
                    <MudButton Disabled="@_processing" Variant="Variant.Filled" Color="Color.Primary" OnClick="Login">
                        @if (_processing)
                        {
                            <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                            <MudText Class="ms-2">Lädt</MudText>
                        }
                        else
                        {
                            <MudText>Login</MudText>
                        }
                    </MudButton>
                </MudCardActions>
            </MudForm>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    private LoginRequest loginRequest = new LoginRequest();
    private MudForm form;
    private bool _processing = false;

    private async Task Login()
    {
        _processing = true;
        await Task.Delay(1000);
        await form.Validate();

        if (form.IsValid)
        {
            try
            {
                var response = await KujiraBackendApi.Login(loginRequest);

                if (!string.IsNullOrEmpty(response.Token))
                {
                    await JSRuntime.InvokeVoidAsync("sessionStorage.setItem", "authToken", response.Token);

                    var authStateProvider = (CustomAuthenticationStateProvider)AuthenticationStateProvider;
                    await authStateProvider.UpdateAuthenticationState();

                    var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
                    var user = authState.User;
                    if (user.IsInRole("Administrator"))
                    {
                        NavigationManager.NavigateTo("/adminDashboard", forceLoad: false);
                    }
                    else if (user.IsInRole("Association"))
                    {
                        NavigationManager.NavigateTo("/associationDashboard", forceLoad: false);
                    }
                    else if (user.IsInRole("SocialService"))
                    {
                        NavigationManager.NavigateTo("/socialEmployerDashboard", forceLoad: false);
                    }
                    else
                    {
                        Snackbar.Add("Unbekannte Benutzerrolle", Severity.Error);
                    }
                }
                else
                {
                    Snackbar.Add("Login fehlgeschlagen. Bitte überprüfen Sie Ihre E-Mail und Ihr Passwort.", Severity.Error);
                }
            }
            catch (Exception ex)
            {
                Snackbar.Add($"Ein Fehler ist aufgetreten:", Severity.Error);
            }
        }
        _processing = false;
    }

}
