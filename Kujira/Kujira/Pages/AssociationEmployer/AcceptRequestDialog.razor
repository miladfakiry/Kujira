@using MudBlazor
@using Kujira.Gui.Api
@using Kujira.Gui.Api.Requests
@using System.Text.Json
@inject IKujiraBackendApi KujiraBackendApi
@inject ISnackbar Snackbar
@inject IDialogService DialogService

<MudDialog>
    <DialogContent>
        <MudTextField T="string" Label="Ihre Nachricht" @bind-Value="@_responseMessage" FullWidth/>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="@SendResponse">Senden</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public Guid RequestId { get; set; }

    [Parameter]
    public EventCallback OnResponseSent { get; set; }

    private string _responseMessage;

    private async Task SendResponse()
    {
        try
        {
            var request = await KujiraBackendApi.GetServiceRequestById(RequestId);
            Console.WriteLine($"Received request: {System.Text.Json.JsonSerializer.Serialize(request)}");
            if (request != null)
            {
                // Fallback-Logik, um fehlende Daten zu holen
                if (string.IsNullOrEmpty(request.RequesterFirstName) || string.IsNullOrEmpty(request.RequesterLastName) || string.IsNullOrEmpty(request.RequesterEmail))
                {
                    var userDetails = await KujiraBackendApi.GetUser(request.FromUserId);
                    request.RequesterFirstName = userDetails?.FirstName ?? "Unbekannt";
                    request.RequesterLastName = userDetails?.LastName ?? "Unbekannt";
                    request.RequesterEmail = userDetails?.Email ?? "nicht-verfuegbar@example.com";
                }

                var responseDto = new ServiceRequestRequest
                {
                    RequestId = request.RequestId,
                    OfferId = request.OfferId,
                    FromUserId = request.FromUserId,
                    ToUserId = request.ToUserId,
                    Message = request.Message,
                    ResponseMessage = _responseMessage,
                    RequesterFirstName = request.RequesterFirstName,
                    RequesterLastName = request.RequesterLastName,
                    RequesterEmail = request.RequesterEmail,
                    RequesterPhoneNumber = request.RequesterPhoneNumber,
                    CreatedAt = request.CreatedAt,
                    RequestStatus = request.RequestStatus
                };

                Console.WriteLine($"Sending response: {JsonSerializer.Serialize(responseDto)}");
                await KujiraBackendApi.SendResponseToRequest(RequestId, responseDto);
                Snackbar.Add("Nachricht gesendet", Severity.Success);
                MudDialog.Close(DialogResult.Ok(_responseMessage));
            }
            else
            {
                Snackbar.Add("Anfrage konnte nicht gefunden werden", Severity.Error);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Fehler beim Senden der Antwort: {ex.Message}");
            Snackbar.Add("Fehler beim Senden der Antwort", Severity.Error);
        }
    }

}